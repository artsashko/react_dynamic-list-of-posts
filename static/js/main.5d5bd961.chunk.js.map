{"version":3,"sources":["components/PostsList/PostsList.jsx","api/api.js","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/Loader/Loader.jsx","components/PostDetails/PostDetails.jsx","api/posts.js","App.jsx","index.js"],"names":["PostsList","posts","postId","selectPostId","className","map","post","key","id","userId","title","type","onClick","BASE_URL","request","path","fetch","then","response","json","result","data","getPostComments","comments","filter","comment","addPostComment","name","email","body","a","url","options","method","JSON","stringify","deletePostComment","commentId","NewCommentForm","getUpdatedComments","useState","setName","setEmail","setBody","handleSubmit","event","preventDefault","onSubmit","placeholder","value","onChange","target","trimLeft","Loader","PostDetails","setPost","setComments","hideComments","setHideComments","useEffect","getPostDetails","length","App","setPosts","selectedUserId","setSelectedUserId","selectedPostId","setSelectedPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d5bd961.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\n\nexport const PostsList = ({ posts, postId, selectPostId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li\n          className=\"PostsList__item\"\n          key={post.id}\n        >\n          <div>\n            <b>{`[User #${post.userId}]: `}</b>\n            {post.title}\n          </div>\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => {\n              if (postId === post.id) {\n                selectPostId(0);\n\n                return;\n              }\n\n              selectPostId(post.id);\n            }}\n          >\n            {postId === post.id\n              ? 'Ð¡lose'\n              : 'Open'\n            }\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      body: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  selectPostId: PropTypes.func.isRequired,\n  postId: PropTypes.number.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function request(path) {\n  return fetch(`${BASE_URL}${path}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","import { request, BASE_URL } from './api';\n\nexport function getPostComments(postId) {\n  return request(`/comments/`)\n    .then(comments => comments\n      .filter(comment => comment.postId === postId));\n}\n\nexport const addPostComment = async(postId, name, email, body) => {\n  const url = `${BASE_URL}/comments/`;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      postId, name, email, body,\n    }),\n  };\n\n  return fetch(url, options)\n    .then(response => response.json())\n    .then(result => result.data);\n};\n\nexport const deletePostComment = async(commentId) => {\n  const url = `${BASE_URL}/comments/${commentId}`;\n  const options = {\n    method: 'DELETE',\n  };\n\n  const response = await fetch(url, options);\n  const comments = await response.json();\n\n  return comments.data;\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\nimport { addPostComment } from '../../api/comments';\n\nexport const NewCommentForm = ({ postId, getUpdatedComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = async(event) => {\n    event.preventDefault();\n\n    if (name && email && body) {\n      await addPostComment(postId, name, email, body);\n      getUpdatedComments();\n      setName('');\n      setEmail('');\n      setBody('');\n    }\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value.trimLeft())}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value.trimLeft())}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value.trimLeft())}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  getUpdatedComments: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deletePostComment } from '../../api/comments';\nimport { Loader } from '../Loader';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState(null);\n  const [hideComments, setHideComments] = useState(false);\n\n  const getUpdatedComments = () => {\n    getPostComments(postId)\n      .then(setComments);\n  };\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then(setPost);\n    getPostComments(postId)\n      .then(setComments);\n  }, [postId]);\n\n  if (!postId) {\n    return 'Choose a post';\n  }\n\n  if (post === null) {\n    return <Loader />;\n  }\n\n  return post && (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {!!comments.length && (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => setHideComments(!hideComments)}\n          >\n            {hideComments\n              ? 'Show '\n              : 'Hide '}\n            {`${comments.length} comments`}\n          </button>\n        )}\n\n        {hideComments || (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={async() => {\n                    await deletePostComment(comment.id);\n                    getUpdatedComments();\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={postId}\n            getUpdatedComments={getUpdatedComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import { request } from './api';\n\nexport function getUserPosts(userId) {\n  return userId === 0\n    ? request(`/posts`)\n    : request(`/posts`)\n      .then(posts => posts\n        .filter(post => post.userId === userId));\n}\n\nexport function getPostDetails(postId) {\n  return request(`/posts/${postId}`);\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { Loader } from './components/Loader';\nimport { getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState(null);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    getUserPosts(selectedUserId)\n      .then(setPosts);\n  }, [selectedUserId]);\n\n  if (!posts) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => setSelectedUserId(+event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectPostId={setSelectedPostId}\n            postId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            postId={selectedPostId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}